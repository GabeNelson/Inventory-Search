/*   Node head;

    /**
     * Adds node to end of linked list
     * @param data

    public void addLast(String data){
        Node node = new Node();
        node.data = data;
        node.next = null;

        if(head == null){
            head = node;
        }
        else{
            Node n = head;
            while(n.next != null){
                n = n.next;
            }
            n.next = node;
        }
    }

    /**
     * Deletes node at specified index
     * @param index

    public void deleteAt(int index){
        if(index == 0){
            head = head.next;
        }
        else{
            Node n = head;
            Node n1 = null;;
            for(int i = 0; i < index - 1; i++){
                n = n.next;
            }
            n1 = n.next;
            n.next = n1.next;
            n1 = null;
        }
    }

    /**
     * Adds node at the front of the list
     * @param data

    public void addFirst(String data){
        Node node = new Node();
        node.data = data;
        node.next = null;
        node.next = head;
        head = node;
    }

    /**
     * inserts node at specified index
     * @param data
     * @param index

    public void insertAt(String data, int index){
        Node node = new Node();
        node.data = data;
        node.next = null;

        if(index == 0){
            addFirst(data);
        }
        Node n = head;
        for(int i = 0; i < index - 1; i++){
            n = n.next;
        }
        node.next = n.next;
    }

    /**
     * prints each node in data structure

    public void show(){
        Node node = head;

        while(node.next != null){
            System.out.println(node.data);
            node = node.next;
        }
        System.out.println(node.data);
    }

    public int getCount(Node head){
        int count = 0;
        Node current = head;
        while(current != null){
            count++;
            current = current.next;
        }
        return count;
    }
    */